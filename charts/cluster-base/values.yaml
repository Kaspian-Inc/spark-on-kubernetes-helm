# Default values for cluster-base.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
tags:
  ingress: true
  oauth2: false
  autoscaler: false

rbac:
  enabled: false
  serviceAccounts: []
    # - name: myServiceAccount
    #   namespace: kube-system
  roles: []
    # - name: myRole
    #   rules:
    #   - apiGroups: [""]
    #     resources: ["services"]
    #     resourceNames: ["*"]
    #     verbs: ["get"]
  bindings: []
    # - role: myRole
    #   cluster: true
    #   subjects:
    #     - kind: ServiceAccount
    #       name: myServiceAccount
    #       namespace: kube-system

clusterIssuers:
  - name: selfsigning-issuer
    spec:
      selfSigned: {}
  # - name: letsencrypt-staging
  #   spec:
  #     acme:
  #       # You must replace this email address with your own.
  #       # Let's Encrypt will use this to contact you about expiring
  #       # certificates, and issues related to your account.
  #       email: user@example.com
  #       server: https://acme-staging-v02.api.letsencrypt.org/directory
  #       privateKeySecretRef:
  #         # Secret resource used to store the account's private key.
  #         name: example-issuer-account-key
  #       # Enable the HTTP01 challenge mechanism for this Issuer
  #       http01: {}

defaultCertificate:
  enabled: true
  issuer: selfsigning-issuer
  issuerKind: ClusterIssuer
  secretName: ingress-default-tls
  commonName: '*.k8s.kaspian.io'
  domains:
  - '*.k8s.kaspian.io'
  - k8s.kaspian.io

cert-manager:
  enabled: true
  ingressShim:
    defaultIssuerName: selfsigning-issuer
    defaultIssuerKind: ClusterIssuer
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: autoscale-retain
  #           operator: In
  #           values:
  #           - "true"

ingress-nginx:
  controller:
    extraArgs:
      default-ssl-certificate: kube-system/ingress-default-tls
    # service:
    #   loadBalancerIP: xxx.xxx.xxx.xxx
    #   loadBalancerSourceRanges: []
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: autoscale-retain
    #           operator: In
    #           values:
    #           - "true"

storageClasses: []
#   - name: standard
#     default: true
#     provisioner: kubernetes.io/vsphere-volume
#     parameters: 
#       diskformat: thin
#   - name: fast
#     provisioner: kubernetes.io/vsphere-volume
#     parameters: 
#       diskformat: zeroedthick

# https://github.com/pusher/oauth2_proxy#azure-auth-provider
oauth2-proxy:
  enabled: false
#  config:
#    # Use an existing secret for OAuth2 credentials (see examples/oauth2-proxy-secret-example.yaml for required fields)
#    existingSecret: oauth2-proxy-secret
#    # or set secret values explicitly
#    clientID: <value>
#    clientSecret: <value>
#    cookieSecret: <value> # eg.: `openssl rand -base64 32 | head -c 32`
#
#  extraArgs:
#    provider: azure
#    # If applicable take note of your TenantID and provide it via the --azure-tenant=<YOUR TENANT ID> commandline option.
#    # Default the common tenant is used.
#    azure-tenant: <azure_tenant_id>
#    email-domain: "*"
#    upstream: file:///dev/null
#
#  ingress:
#    enabled: true
#    annotations:
#      kubernetes.io/ingress.class: nginx
#      kubernetes.io/tls-acme: "true"
#    path: /oauth2
#    hosts:
#    - cluster.example.com
#    tls:
#    - secretName: spark-cluster-tls
#      hosts:
#      - cluster.example.com
#  affinity:
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: autoscale-retain
#            operator: In
#            values:
#            - "true"

# https://github.com/helm/charts/tree/master/stable/cluster-autoscaler
cluster-autoscaler:
  enabled: false
#
# Azure AKS with VMAS guide:
# - https://github.com/helm/charts/tree/master/stable/cluster-autoscaler#azure-aks
# - https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/azure/README.md#acs-deployment
#   cloudProvider: azure
#   autoscalingGroups:
#   - name: agentpool
#     minSize: 1
#     maxSize: 10
#   azureVMType: AKS
#   azureClientID: ""
#   azureClientSecret: ""
#   azureSubscriptionID: ""
#   azureTenantID: ""
#   azureClusterName: "<aks_service_name>"
#   azureResourceGroup: "<aks_service_rg>"
#   azureNodeResourceGroup: "<aks_nodes_and_vmas_rg>"
#
# Azure AKS with VMSS guide:
# - https://docs.microsoft.com/en-us/azure/aks/use-multiple-node-pools
# - https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/azure/README.md#vmss-deployment
#  cloudProvider: azure
#  autoscalingGroups:
#  - name: aks-agentpool1-12345678-vmss
#    minSize: 1
#    maxSize: 5
#  - name: aks-agentpool2-87654321-vmss
#    minSize: 1
#    maxSize: 10
#  azureVMType: vmss
#  azureClientID: ""
#  azureClientSecret: ""
#  azureSubscriptionID: ""
#  azureTenantID: ""
#  azureResourceGroup: "<aks_nodes_and_vmss_rg>"
#
#   rbac:
#     create: true
#   # NOTE: be sure to install Prometheus Operator CRDs before setting this to true: https://github.com/helm/charts/tree/master/stable/prometheus-operator#helm-fails-to-create-crds
#   serviceMonitor:
#     enabled: false
#     namespace: monitoring
#
#  affinity:
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: autoscale-retain
#            operator: In
#            values:
#            - "true"

# Add PodDisruptionBudgets specs to be installed with the chart
pdbs: []
# - metadata:
#     name: heapster-pdb
#     namespace: kube-system
#   spec:
#     minAvailable: 0
#     selector:
#       matchLabels:
#         k8s-app: heapster